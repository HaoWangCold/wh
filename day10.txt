1.计算机表示图形的几种方法
	bmp :以高质量保存 用于计算机
	jpg :以良好的质量保存 用于计算机或者网络
	png :以高质量保存

	图片大小的计算公式 ：图片的总像素 *每个像素大小
	单色：每个像素最多可以表示2种颜色 要么是黑要么是白 那么只需要使用长度为1的二进制来表示
那么一个像素占1/8个byte
	16色：每个像素最多可以表示16种颜色 0000-1111 那么只需要使用长度4的二进制来表示
那么一个像素占1/2个byte
	256色：每个像素最多可以表示259种颜色 0000-0000-1111-1111 那么只需要使用长度8的二进制来表示
那么一个像素占1个byte
	24位：每个像素最多可以表示1600多万种颜色 也就是RGB的组合
那么一个像素占3byte 即R G B 分别是 1byte  

2.缩放加载大图片

	1)获取图片的分辨率 2400*3200 
	2)获取手机的图片   320*480
	3)计算缩放比
		宽 7
	 	高 6
	4)按大比例缩放

3.获取手机的分辨率和图片的分辨率
	需要用到的类：WindowManager :窗口管理者（以前学过的manager: SmsManager,TelephoneManager）
	获取WindowManager的方法：WindowManager wm = (WindowManager)getSystemService(WINDOW_SERVICE);
	获取手机分辨率的方法：
		过时的获取分辨率的方法 （JAVA语言的思想）：
			int height = wm.getDefaultDisplay().getHeight();获取高
			int width = wm.getDefaultDisplay().getWidth();获取宽
		与时俱进的方法(C语言的思想)：
			Point point = new Point();
			wm.getDefaultDisplay().getSize(point);
			int width = point.x;
			int height = point.y;  注 :使用时把minSdkVersion的版本改为13或以上，才能用。
	获取图片分辨率的方法：
		1)创建一个位图工厂的配置参数：
			BitmapFactory.Options options = new Options();
		2)解码器不去真正的解析位图 但是能够获取图片的宽和高信息
			options.inJustDecodeBounds = true;
			BitmapFactory.decodeFile("图片位置"，options);
		3)获取图片的宽和高的信息
			int imgWidth = options.outWidth;
			int imgHeight = options.outHeight;

4.缩放显示大图片原理
	计算缩放比：
		int scale = 1;
		int scaleX = imgwidth/width;
		int scaleY = imgheight/height;
		if(scaleX>=scaleY && scaleX>scale){ scaleX = scale }
		if(scaleY>=scaleX && scaleY>scale){ scaleY = scale }
	按照缩放比进行显示
		option.inSimpleSize = scale;
	按照缩放比解析位图
		options.inJustDecodeBounds = false;
		Bitmap bitmap = BitmapFactory.decodeFile("图片位置"，options);
	把Bitmap显示在iv上
		iv.setImageBitmap(bitmap);
5.创建原图副本
	创建原图：
		Bitmap srcBitmap = BitmapFactory.decodeResource(getResource(),R,drawable.图片名);  注：图片放在了drawable 目录下
		iv_src.setImageBitmap(srcBitmap);
		
	创建副本：
		Bitmap copyBitmap = BitMap.createBitmap(srcBitmap.getWidth(),srcBitmap.getHeight(),srcBitmap.getConfig());
		Paint paint = new Paint();  新建的画笔
		Canvas canvas = new Canvas();  新建的画布
		canvas.drawBitmap(srcBitmap,new Matrix(),paint); 作画
		iv_copy.setImageBitmap(copyBitmap); 显示副本
	修改副本
		copyBitmap.setPixel(x,y,Color.RED) 只能改一个点 想画成线 需要用for循环 第三个参数是颜色。
	
6.图片处理的api
	其实就是修改canvas.drawBitmap(srcBitmap,new Matrix(),paint) 中new Matrix()参数
	Matrix matrix = new Matrix(); 之后修改结束后 把matrix作为参数传进去.
	matrix.setRotate(角度,srcBitmap.getWidth()/2,srcBitmap.getHeight()/2); 旋转，第一个为旋转角度 第二个，第三个确认旋转中心。
	matrix.setScale(sx，sy); 缩放 传入参数为缩放比例 	
	matrix.setTranslate(dx，dy); 平移  参数为x y 轴的平移距离
	镜面是缩放和平移： 
	matrix.setScale(-0.1f，1);	
	matrix.postTranslate(srcBitmap.getWidth()，0);  组合使用时 第一个是set 之后用post方法，post是在原基础上进行操作，set会覆盖上次的操作。
	倒影也是缩放和平移
	matrix.setScale(0.1f，-1);	
	matrix.postTranslate(0，srcBitmap.getHeight());







